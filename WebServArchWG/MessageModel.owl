<?xml version='1.0' encoding='utf-8'?>
<!--
     Copyright (C)2004 W3C(R) (MIT, ERCIM, Keio), All Rights Reserved.
     W3C viability, trademark, document use and software licensing rules
     apply.                                                             
     http://www.w3.org/Consortium/Legal/
                                        
     This document is governed by the W3C Software License [1] as
     described in the FAQ [2].

     [1] http://www.w3.org/Consortium/Legal/copyright-software-20021231
     [2] http://www.w3.org/Consortium/Legal/IPR-FAQ-20000620.html#DTD
-->
<!DOCTYPE uridef[
  <!ENTITY owl "http://www.w3.org/2002/07/owl">
  <!ENTITY rdf "http://www.w3.org/1999/02/22-rdf-syntax-ns">
  <!ENTITY rdfs "http://www.w3.org/2000/01/rdf-schema">
  <!ENTITY xsd "http://www.w3.org/2001/XMLSchema">
  <!ENTITY ServiceModel "http://www.w3.org/2004/02/wsa/ServiceModel.owl">
  <!ENTITY PolicyModel "http://www.w3.org/2004/02/wsa/PolicyModel.owl">
  <!ENTITY ResourceModel "http://www.w3.org/2004/02/wsa/ResourceModel.owl">
  <!ENTITY Extensions "http://www.w3.org/2004/02/wsa/Extensions.owl">
]>

<rdf:RDF
  xmlns:owl  ="http://www.w3.org/2002/07/owl#"
  xmlns:rdf  ="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
  xmlns:rdfs ="http://www.w3.org/2000/01/rdf-schema#"
  xmlns:xsd  ="http://www.w3.org/2001/XMLSchema#"
  xml:base	 ="http://www.w3.org/2004/02/wsa/MessageModel.owl"
  xmlns      ="http://www.w3.org/2004/02/wsa/MessageModel.owl#"
 >

<owl:Ontology rdf:about="">
 <owl:versionInfo>$Id: MessageModel.owl,v 1.2 2004/02/05 16:18:21 hugo Exp $</owl:versionInfo>
 <rdfs:comment> Compiled by Massimo Paolucci, Naveen Srinivasan and Katia Sycara. Carnegie Mellon University
 </rdfs:comment>
 <owl:imports rdf:resource="http://www.w3.org/2004/02/wsa/ServiceModel.owl"/>
 <owl:imports rdf:resource="http://www.w3.org/2004/02/wsa/PolicyModel.owl"/>
  <owl:imports rdf:resource="http://www.w3.org/2004/02/wsa/ResourceModel.owl"/>
  <owl:imports rdf:resource="http://www.w3.org/2004/02/wsa/Extensions.owl"/>

</owl:Ontology>

<!-- 2.3.1.1  Address -->

<owl:Class rdf:ID="Address">
  <rdfs:label>Address</rdfs:label>
  <rdfs:comment>
    An address is that information required by a message transport
    mechanism in order to deliver a message appropriately.
  </rdfs:comment>
</owl:Class>


<owl:ObjectProperty rdf:ID="realizedBy">
  <rdfs:label>contained</rdfs:label>
  <rdfs:comment> An address may be a URI.
  </rdfs:comment>
  <rdfs:domain rdf:resource="#Address"/>
  <rdfs:range rdf:resource="&Extensions;#URI"/>
</owl:ObjectProperty>


<owl:ObjectProperty rdf:ID="contained_in_msg_env">
  <rdfs:label>contained</rdfs:label>
  <rdfs:comment>An address may be contained in the message envelope. 
  </rdfs:comment>
  <rdfs:domain rdf:resource="#Address"/>
  <rdfs:range rdf:resource="#Message_Envelope"/>
</owl:ObjectProperty>

<!-- 
      " An address is typically transport mechanism specific" expressed in Extensions.owl
-->


<!-- 2.3.1.2 - Delivery Policy -->


<owl:Class rdf:ID="Delivery_Policy">
  <rdfs:label>Delivery_Policy</rdfs:label>
  <rdfs:comment>
    A delivery policy is a policy that constrains the methods by which
    messages are delivered by the message transport.
  </rdfs:comment>
  <rdfs:subClassOf rdf:resource="&PolicyModel;#Policy"/>
</owl:Class>


<owl:ObjectProperty rdf:ID="constrains">
  <rdfs:label>contains</rdfs:label>
  <rdfs:comment>
    Delivery policy constrains message transport - 2.3.1.2.2 
  </rdfs:comment>
  <rdfs:domain rdf:resource="#Delivery_Policy"/>
  <rdfs:range rdf:resource="#Message_Transport"/>
</owl:ObjectProperty>

<owl:ObjectProperty rdf:ID="expressedIn">
  <rdfs:label>contains</rdfs:label>
  <rdfs:comment>
    Delivery policy constrains message transport - 2.3.1.2.2 
  </rdfs:comment>
  <rdfs:domain rdf:resource="#Delivery_Policy"/>
  <rdfs:range rdf:resource="&Extensions;#PolicyDescriptionLanguage"/>
</owl:ObjectProperty>


<!--
    Not Expressed : Delivery policy may express the quality of service associated with delivering a message by a message transport mechanism 
 -->


<!-- 2.3.1.3 - Message -->

<owl:Class rdf:ID="Message">
  <rdfs:label>Message</rdfs:label>
  <rdfs:comment>
    A message is the basic unit of data sent from one Web services
    agent to another in the context of Web services.
  </rdfs:comment>
</owl:Class>


<owl:ObjectProperty rdf:ID="part_of_sequence">
  <rdfs:label>part_of_sequence</rdfs:label>
  <rdfs:comment>
     message may be part of a message sequence 
  </rdfs:comment>
  <rdfs:domain rdf:resource="#Message"/>
  <rdfs:range rdf:resource="#Message_Sequence"/>
</owl:ObjectProperty>

<owl:ObjectProperty rdf:ID="describedUsing">
  <rdfs:label>contains</rdfs:label>
  <rdfs:comment>
    a message may be described using a service description language. There is no concept that represents service description language.
  </rdfs:comment>
  <rdfs:domain rdf:resource="#Message"/>
  <rdfs:range rdf:resource="&Extensions;#ServiceDescriptionLanguage"/>
</owl:ObjectProperty>


<owl:ObjectProperty rdf:ID="message_sender">
  <rdfs:label>message_sender</rdfs:label>
  <rdfs:comment>
    a message has a message sender  
  </rdfs:comment>
  <rdfs:domain rdf:resource="#Message"/>
  <rdfs:range rdf:resource="#Message_Sender"/>
</owl:ObjectProperty>

<owl:Class rdf:about="Message">
  <rdfs:subClassOf>
    <owl:Restriction>
      <owl:onProperty rdf:resource="#message_sender"/>
      <owl:cardinality rdf:datatype="&xsd;#nonNegativeInteger">1</owl:cardinality>
    </owl:Restriction>
  </rdfs:subClassOf>
</owl:Class>


<owl:ObjectProperty rdf:ID="message_recipient">
  <rdfs:label>message_recipients</rdfs:label>
  <rdfs:comment>
    a message has one or more message recipients 
    We assume that Message Recipient is the same of Message Receiver
  </rdfs:comment>
  <rdfs:domain rdf:resource="#Message"/>
  <rdfs:range rdf:resource="#Message_Receiver"/>
</owl:ObjectProperty>

<owl:Class rdf:about="Message">
  <rdfs:subClassOf>
    <owl:Restriction>
      <owl:onProperty rdf:resource="#message_recipient"/>
      <owl:minCardinality rdf:datatype="&xsd;#nonNegativeInteger">1</owl:minCardinality>
    </owl:Restriction>
  </rdfs:subClassOf>
</owl:Class>

<owl:ObjectProperty rdf:ID="has_identifier">
  <rdfs:label>has_identifier</rdfs:label>
  <rdfs:comment>
    a message may have an identifier (2.3.1.3.2)
  </rdfs:comment>
  <rdfs:domain rdf:resource="#Message"/>
  <rdfs:range rdf:resource="&ResourceModel;#Identifier"/>
</owl:ObjectProperty>


<owl:ObjectProperty rdf:ID="message_body">
  <rdfs:label>message_body</rdfs:label>
  <rdfs:comment>
    a message has a message body (2.3.1.3.2)
  </rdfs:comment>
  <rdfs:domain rdf:resource="#Message"/>
  <rdfs:range rdf:resource="#Message_Body"/>
</owl:ObjectProperty>

<owl:Class rdf:about="Message">
  <rdfs:subClassOf>
    <owl:Restriction>
      <owl:onProperty rdf:resource="#message_body"/>
      <owl:cardinality rdf:datatype="&xsd;#nonNegativeInteger">1</owl:cardinality>
    </owl:Restriction>
  </rdfs:subClassOf>
</owl:Class>


<owl:ObjectProperty rdf:ID="message_header">
  <rdfs:label>headers</rdfs:label>
  <rdfs:comment>
    a message has zero or more message headers (2.3.1.3.2)
  </rdfs:comment>
  <rdfs:domain rdf:resource="#Message"/>
  <rdfs:range rdf:resource="#Message_Header"/>
</owl:ObjectProperty>


<owl:ObjectProperty rdf:ID="message_envelope">
  <rdfs:label>envelope</rdfs:label>
  <rdfs:comment>
    A message has a message envelope (2.3.1.3.2)
  </rdfs:comment>
  <rdfs:domain rdf:resource="#Message"/>
  <rdfs:range rdf:resource="#Message_Envelope"/>
</owl:ObjectProperty>

<owl:Class rdf:about="Message">
  <rdfs:subClassOf>
    <owl:Restriction>
      <owl:onProperty rdf:resource="#message_envelope"/>
      <owl:cardinality rdf:datatype="&xsd;#nonNegativeInteger">1</owl:cardinality>
    </owl:Restriction>
  </rdfs:subClassOf>
</owl:Class>


<owl:ObjectProperty rdf:ID="message_transport">
  <rdfs:label>delivered_by</rdfs:label>
  <rdfs:comment>
    A message is delivered by a message transport system (2.3.1.3.2)
    I assume that "transport system" is actually Message Transport
  </rdfs:comment>
  <rdfs:domain rdf:resource="#Message"/>
  <rdfs:range rdf:resource="#Message_Transport"/>
</owl:ObjectProperty>

<owl:Class rdf:about="Message">
  <rdfs:subClassOf>
    <owl:Restriction>
      <owl:onProperty rdf:resource="#message_transport"/>
      <owl:cardinality rdf:datatype="&xsd;#nonNegativeInteger">1</owl:cardinality>
    </owl:Restriction>
  </rdfs:subClassOf>
</owl:Class>

<owl:ObjectProperty rdf:ID="associated_policy">
  <rdfs:label>associated_policy</rdfs:label>
  <rdfs:comment>
    A message may have a delivery policy associated with it (2.3.1.3.2)
  </rdfs:comment>
  <rdfs:domain rdf:resource="#Message"/>
  <rdfs:range rdf:resource="#Delivery_Policy"/>
</owl:ObjectProperty>


<!-- 2.3.1.4 - Message Body -->


<owl:Class rdf:ID="Message_Body">
  <rdfs:label>Message_Body</rdfs:label>
  <rdfs:comment>
    A message body is the structure that represents the primary
    content that the message sender intends to deliver to the message
    recipient. 
  </rdfs:comment>
</owl:Class>


<owl:ObjectProperty rdf:ID="contained_by">
  <rdfs:label>contained_by</rdfs:label>
  <rdfs:comment>
    A message body is contained by the message envelope
  </rdfs:comment>
  <rdfs:domain rdf:resource="#Message_Body"/>
  <rdfs:range rdf:resource="#Message_Envelope"/>
</owl:ObjectProperty>

<!-- 
    Note : "A message body is the application-specific content intended for the message recipient." We can model a content that is intended for the message recipient.  By it is difficult to express an that the content is application-specific.
 -->
 
 
 <owl:ObjectProperty rdf:ID="content">
   <rdfs:label>contained_by</rdfs:label>
   <rdfs:comment>
A message body is the application-specific content intended for the message recipient.   </rdfs:comment>
   <rdfs:domain rdf:resource="#Message_Body"/>
   <rdfs:range rdf:resource="&Extensions;#Body_Content"/>
</owl:ObjectProperty>

 
 

<!-- 2.3.1.5 - Message Correlation -->

<owl:Class rdf:ID="Message_Correlation">
  <rdfs:label>Message_Correlation</rdfs:label>
  <rdfs:comment>Message correlation is the association of a message with a context. Message correlation ensures that a requester agent can match the reply with the request, especially when multiple replies may be possible.
  </rdfs:comment>
</owl:Class>


<!-- 
	Not Expressed : Message Correlation is a means of associating a message within a specific conversational context.
-->

<!-- 	
    Note : "Message correlation may be realized by including message identifiers to enable messages to be identified" We are interpreting that a message identifier, different from the message identifier defined in the message, specific to message correlation will be present in the message to enable correlation. Hence we are adding a ObjectProperty to Class Message.
-->
<owl:ObjectProperty rdf:ID="correlation_id">
  <rdfs:label>associated_policy</rdfs:label>
  <rdfs:comment>
	Message correlation may be realized by including message identifiers to enable messages to be identified  </rdfs:comment>
  <rdfs:domain rdf:resource="#Message"/>
  <rdfs:range rdf:resource="&ResourceModel;#Identifier"/>
</owl:ObjectProperty>


<!-- 2.3.1.6- Message Envelope -->

<owl:Class rdf:ID="Message_Envelope">
  <rdfs:label>Message_Envelope</rdfs:label>
  <rdfs:comment>
    A message envelope is the structure that encapsulates the
    component parts of a message: the message body and the message
    headers.
  </rdfs:comment>
</owl:Class>

<!-- 
	Note : "a message envelope may contain address information about the intended recipients of its associated message" We can express  message envelope has an address slot, but it is difficult to express that this address information is about the intended recipients of its associates message.
-->

<owl:ObjectProperty rdf:ID="contains_address">
  <rdfs:label>body</rdfs:label>
  <rdfs:comment>
    a message envelope may contain address information about the intended recipients of its associated message
  </rdfs:comment>
<owl:inverseOf rdf:resource="#contained_in_msg_env"/>
</owl:ObjectProperty>


<owl:ObjectProperty rdf:ID="contains_msg_body">
  <rdfs:label>body</rdfs:label>
  <rdfs:comment>
    A message envelope contains the body of the message
  </rdfs:comment>
<owl:inverseOf rdf:resource="#contained_by"/>
</owl:ObjectProperty>


<owl:ObjectProperty rdf:ID="me_message_header">
  <rdfs:label>header</rdfs:label>
  <rdfs:comment>
    A message envelope contains the message headers
  </rdfs:comment>
  <rdfs:domain rdf:resource="#Message_Envelope"/>
  <rdfs:range rdf:resource="#Message_Header"/>
</owl:ObjectProperty>


<!-- 2.3.1.7- Message_Exchange_Pattern -->

<owl:Class rdf:ID="Message_Exchange_Pattern">
  <rdfs:label>Message_Exchange_Pattern</rdfs:label>
  <rdfs:comment>
    A Message Exchange Pattern (MEP) is a template, devoid of
    application semantics, that describes a generic pattern for the
    exchange of messages between agents. It describes the temporal and
    causal relationships, if any, of multiple messages exchanged in
    conformance with the pattern, as well as the normal and abnormal
    termination of any message exchange conforming to the pattern.
  </rdfs:comment>
</owl:Class>


<owl:ObjectProperty rdf:ID="mep_identifier">
  <rdfs:label>mep_identifier</rdfs:label>
  <rdfs:comment>
    A message exchange parttern should have a unique identifier
  </rdfs:comment>
  <rdfs:domain rdf:resource="#Message_Exchange_Pattern"/>
  <rdfs:range rdf:resource="&ResourceModel;#Identifier"/>
</owl:ObjectProperty>



<owl:ObjectProperty rdf:ID="realize_correlation">
  <rdfs:label>realize_correlation</rdfs:label>
  <rdfs:comment>
    A message exchange pattern may realize a message correlation
  </rdfs:comment>
  <rdfs:domain rdf:resource="#Message_Exchange_Pattern"/>
  <rdfs:range rdf:resource="#Message_Correlation"/>
</owl:ObjectProperty>


<!-- 
	We define  a class Service_Invocation to express this relation.
-->
<owl:ObjectProperty rdf:ID="describe_service_invocation">
  <rdfs:label>describe_service_invocation</rdfs:label>
  <rdfs:comment>
    A message exchange pattern may describe a service invocation
  </rdfs:comment>
  <rdfs:domain rdf:resource="#Message_Exchange_Pattern"/>
  <rdfs:range rdf:resource="&Extensions;#Service_Invocation"/>
</owl:ObjectProperty>


<!-- 2.3.1.8 Message Header -->


<owl:Class rdf:ID="Message_Header">
  <rdfs:label>Message_Header</rdfs:label>
  <rdfs:comment>
    A message header is the part of the message that contains
    information about a specific aspect of the message. Message
    headers may be available to potential intermediaries that also
    process the message.
  </rdfs:comment>
</owl:Class>


<owl:ObjectProperty rdf:ID="me_message_header_of">
  <rdfs:label>header_of</rdfs:label>
  <rdfs:comment>
    A message header is contained in a message envelope
  </rdfs:comment>
<owl:inverseOf rdf:resource="#me_message_header"/>
</owl:ObjectProperty>

<!-- Not Expressed : a message header may be a specific well known types-->

<owl:ObjectProperty rdf:ID="service_role">
  <rdfs:label>service_role</rdfs:label>
  <rdfs:comment>
	a message header may identify a service role, which denotes the kind of processing expected for the header.  
	</rdfs:comment>
  <rdfs:domain rdf:resource="#Message_Header"/>
  <rdfs:range rdf:resource="&ServiceModel;#Service_Role"/>
</owl:ObjectProperty>

<!-- 

Not Expressed : "a message header may be processed independently of the message body" It is very difficult to express actions in OWL. Even if we express it will result in meaningless classes and property.

-->

<!-- 2.3.1.9 - Message Receiver -->


<owl:Class rdf:ID="Message_Receiver">
  <rdfs:label>Message_Receiver</rdfs:label>
  <rdfs:comment>
    A message Receiver is an agent that receives a message
  </rdfs:comment>
  <rdfs:subClassOf rdf:resource="&ServiceModel;#Agent"/>
</owl:Class>


<owl:ObjectProperty rdf:ID="recipient">
  <rdfs:label>recipient</rdfs:label>
  <rdfs:comment>
    A message receiver is the recipient of the message
  </rdfs:comment>
<owl:inverseOf rdf:resource="#message_recipient"/>
</owl:ObjectProperty>


<owl:Class rdf:about="&ServiceModel;Service_Intermediary">  
  <rdfs:comment>
    a message receiver may be an intermediary  
    We represent this with a subclass so that some message recipients
    are intermediaries, and others are not.  Though we also assume that
    all intermediaries are message receivers, which sounds quite
    reasonable.
  </rdfs:comment>
  <rdfs:subClassOf rdf:resource="#Message_Receiver"/>
</owl:Class>

<!-- 2.3.1.10 - Message Reliability -->


<owl:Class rdf:ID="Message_Reliability">
  <rdfs:label>Message_Reliability</rdfs:label>
  <rdfs:comment>
    Message reliability is the degree of certainty that a message will
    be delivered and that sender and receiver will both have the same
    understanding of the delivery status.
    Message reliability is a property of message delivery. 
  </rdfs:comment>
</owl:Class>


<!-- 
Note : "message reliability may be realized by a combination of message acknowledgement and correlation". There is no concept Message Acknowledgement in the specification. We define a new concept called Message Acknowledgement and use it in the definition of this relationship. We define a class which represents the union of message acknowledgement and message correlation and use it as the range of  reliability_realized_by

-->

<owl:ObjectProperty rdf:ID="reliability_realized_by">
  <rdfs:label>reliability_realized_by_</rdfs:label>
  <rdfs:comment>
    message reliability may be realized by a combination of message acknowledgement and correlation.
  </rdfs:comment>
  <rdfs:domain rdf:resource="#Message_Reliability"/>
  <rdfs:range>
 	<owl:Class>
  		<owl:unionOf rdf:parseType="Collection">
    		<owl:Class rdf:about="&Extensions;#Message_Acknowledgement"/>
    		<owl:Class rdf:about="#Message_Correlation"/>
  		</owl:unionOf>
	</owl:Class> 
  </rdfs:range>
</owl:ObjectProperty>



<owl:ObjectProperty rdf:ID="realized_by">
  <rdfs:label>realized_by</rdfs:label>
  <rdfs:comment>
    Message reliability may be realized by a transport mechanism   
    We assume that "transport mechanism" is equivalent to message transport
  </rdfs:comment>
  <rdfs:domain rdf:resource="#Message_Reliability"/>
  <rdfs:range rdf:resource="#Message_Transport"/>
</owl:ObjectProperty>


<!-- 2.3.1.11 - Message Sender -->


<owl:Class rdf:ID="Message_Sender">
  <rdfs:label>Message_Sender</rdfs:label>
  <rdfs:comment>
    A message sender is the agent that transmits a message
  </rdfs:comment>
  <rdfs:subClassOf rdf:resource="&ServiceModel;#Agent"/>
  <rdfs:comment>
    A message sender is an agent
  </rdfs:comment>
</owl:Class>


<owl:ObjectProperty rdf:ID="originator_of">
  <rdfs:label>originator_of</rdfs:label>
  <rdfs:comment>
    A message sender is the originator of a message
  </rdfs:comment>
<owl:inverseOf rdf:resource="#message_sender"/>
</owl:ObjectProperty>


<owl:Class rdf:about="&ServiceModel;Service_Intermediary">  
  <rdfs:comment>
    a message sender may be an intermediary  
    I represent this with a subclass so that some message senders
    are intermediaries, and others are not.  Though I also assume that
    all intermediaries are message receivers, which sounds quite
    reasonable.
  </rdfs:comment>
  <rdfs:subClassOf rdf:resource="#Message_Sender"/>
</owl:Class>

<!-- 2.3.1.12 - Message Sequence -->


<owl:Class rdf:ID="Message_Sequence">
  <rdfs:label>Message_Sequence</rdfs:label>
  <rdfs:comment>
    A message sequence is a sequence of related messages
  </rdfs:comment>
</owl:Class>


<owl:ObjectProperty rdf:ID="realize_mep">
  <rdfs:label>realize_mep</rdfs:label>
  <rdfs:comment>
    A message sequence may realize a documented message exchange pattern
  </rdfs:comment>
  <rdfs:domain rdf:resource="#Message_Sequence"/>
  <rdfs:range rdf:resource="#Message_Exchange_Pattern"/>
</owl:ObjectProperty>


<!-- 2.3.1.13 - Message Transport -->


<owl:Class rdf:ID="Message_Transport">
  <rdfs:label>Message_Transport</rdfs:label>
  <rdfs:comment>
    A message transport is a mechanism that may be used by agents to delivers messages
  </rdfs:comment>
</owl:Class>

<!-- Cannot express the following statement "a message transport has zero or more capabilities" because the definition of capability is not provided. A definition for capability can be found in the ServiceModel section, but it describes capability with respect to an Agent.-->


<owl:ObjectProperty rdf:ID="constrained_by">
  <rdfs:label>constrained_by</rdfs:label>
  <rdfs:comment>
    A message transport is constrained by various delivery policies
  </rdfs:comment>
  <rdfs:domain rdf:resource="#Message_Transport"/>
  <rdfs:range rdf:resource="#Delivery_Policy"/>
</owl:ObjectProperty>

<!-- 
	Not Expressed : "a message transport must know sufficient address information in order to deliver a message". Using OWL we can model a message transport need address information. But we cannot model sufficient address information.   
-->

</rdf:RDF>

